{"version":3,"sources":["components/Nav/nav.module.scss","assest/form.module.scss","assest/Image/logo.png","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/personsReducer.js","reducers/chipsReducer.js","reducers/index.js","store.js","utils/setAuthToken.js","actions/authActions.js","components/Nav/nav.js","pages/Homepage/homepage.js","pages/Register/register.js","pages/Login/login.js","pages/ForgotPass/forgotPassword.js","pages/ResetPass/resetPassword.js","pages/Confirmation/confirmation.js","actions/personsActions.js","actions/chipsActions.js","pages/Dashboard/components/dailyCheck.js","pages/Dashboard/components/formEditore.js","pages/Dashboard/components/rolesEditor.js","pages/Dashboard/components/members.js","pages/Dashboard/components/profile.js","pages/Dashboard/components/manager.js","pages/Dashboard/components/employee.js","pages/Dashboard/dashboard.js","components/private-route/PrivateRoute.js","components/Error-404.js","App.js","serviceWorker.js","index.js","pages/Dashboard/dashboard.module.scss"],"names":["module","exports","navBar","logo","formContainer","msgErrors","sendEmail","errors","forgotPassword","notRobot","__webpack_require__","p","SET_CURRENT_USER","GET_ALL_PERSONS","GET_ALL_CHIPS","isEmpty","require","initialState","isAuthenticated","user","loading","isVerified","error","persons","chips","rootReducer","combineReducers","auth","state","arguments","length","undefined","action","type","_objectSpread","payload","personsReducer_objectSpread","chipsReducer_objectSpread","middleware","thunk","store","createStore","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","setAuthToken","token","axios","defaults","headers","common","message","msg","react_default","a","createElement","options","autoClose","toast","TYPE","ERROR","hideProgressBar","setCurrentUser","decoded","isNotVerified","logoutUser","dispatch","localStorage","removeItem","Nav","isPrivateNav","onLogoutClick","e","preventDefault","_this","props","nextProps","this","setState","getItem","className","classes","react_router_dom","to","src","alt","onClick","React","Component","connect","Homepage","SignUpSchema","Yup","shape","firstName","min","max","required","lastName","email","password","Register","isHide","isNotRobot","submitHandler","values","recaptcha","document","querySelector","registerUser","history","style","border","dismiss","passwordHandler","inputPassword","getElementById","onReCAPTCHA","value","push","_this2","formik_esm","initialValues","validationSchema","onSubmit","_ref","touched","name","placeholder","id","esm","sitekey","onChange","hl","userData","post","then","res","data","status","info","concat","catch","err","response","withRouter","SignInSchema","Login","sendEmailVerify","console","log","loginUser","setItem","jwt_decode","ForgotPassSchema","ForgotPassword","result","ResetPassSchema","ResetPassword","updated","resetPassword_objectSpread","loginHandler","replace","sendEmailAgainHandler","match","params","_this3","Fragment","Confirmation","registerHandler","getAllPersons","get","timeFormatter","cell","row","date","newDate","Date","hours","getHours","minute","getMinutes","getFullTime","DailyCheck","chipsList","swipesOfDate","finalListOfPersons","isOpen","onClickDay","day","Object","toConsumableArray","i","obj","swipesOfToday","swipes","filter","item","getFullYear","getMonth","getDate","coming","leaving","chipNumber","compareChipsAndPersons","forEach","e1","e2","rfId","getAllChips","dailyCheckContainer","entry_default","locale","react_bootstrap_table_lib","search","multiColumnSearch","pagination","headerStyle","color","sizePerPage","sizePerPageList","text","clearSearch","isKey","dataField","dataSort","dataFormat","tip","EditSchema","FormEditor","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","close","onUpdate","defaultValue","bind","assertThisInitialized","personData","_id","roles","formEditore_objectSpread","editPersonData","editContainer","inputItem","blackBg","RolesEditor","updateData","onToggleRoles","event","currentTarget","indexOf","r","rolesEditor_objectSpread","open","rolesCheckBoxes","map","key","checked","onKeyDown","htmlFor","selectButton","isVerifiedFormatter","rolesFormatter","join","createTextEditor","formEditore","assign","createRolesEditor","rolesEditor","Members","membersContainer","cellEdit","mode","customEditor","getElement","thStyle","width","tdStyle","Profile","profileContainer","content","Manager","itemDisplayed","sidebarItems","icon","clickHandler","target","innerText","switchItemsInSidebar","dailyCheck","members","profile","comingSoon","managerContainer","sidebarContainer","Employee","employeeContainer","Dashboard","userSwitch","role","checkRoleOfUser","manager","employee","component","rest","objectWithoutProperties","react_router","render","Error404","jwtToken","currentTime","now","exp","location","href","App","react_toastify","position","nav","exact","path","homepage","register","login","resetPassword","confirmation","private_route_PrivateRoute","Boolean","hostname","ReactDOM","es","src_App","navigator","serviceWorker","ready","registration","unregister","selectItems"],"mappings":"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","file":"static/js/main.01ec0195.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"nav_navBar__BXsKH\",\"logo\":\"nav_logo__3XwKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"form_formContainer__2UaAI\",\"msgErrors\":\"form_msgErrors__XtpWh\",\"sendEmail\":\"form_sendEmail__1Gz22\",\"errors\":\"form_errors__1PUWX\",\"forgotPassword\":\"form_forgotPassword__1M7wd\",\"notRobot\":\"form_notRobot__1p_2W\"};","module.exports = __webpack_public_path__ + \"static/media/logo.9eaab74d.png\";","export const GET_ERRORS = 'GET_ERRORS';\nexport const USER_LOADING = 'USER_LOADING';\nexport const USER_IS_VERIFIED = 'USER_IS_VERIFIED';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const GET_ALL_PERSONS = 'GET_ALL_PERSONS';\nexport const GET_ALL_CHIPS = 'GET_ALL_CHIPS';\n","import { SET_CURRENT_USER, USER_LOADING, USER_IS_VERIFIED } from '../actions/types';\n\nconst isEmpty = require('is-empty');\n\nconst initialState = {\n\tisAuthenticated: false,\n\tuser: {},\n\tloading: false,\n\tisVerified: true\n};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SET_CURRENT_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisAuthenticated: !isEmpty(action.payload),\n\t\t\t\tuser: action.payload\n\t\t\t};\n\t\tcase USER_LOADING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true\n\t\t\t};\n\t\tcase USER_IS_VERIFIED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisVerified: false\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {\n\terror: null\n};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_ERRORS:\n\t\t\treturn {\n\t\t\t\terror: action.payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { GET_ALL_PERSONS } from '../actions/types';\n\nconst initialState = {\n\tpersons: []\n};\n\nexport default function(state = initialState, action) {\n\t// console.log(action);\n\n\tswitch (action.type) {\n\t\tcase GET_ALL_PERSONS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpersons: action.payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { GET_ALL_CHIPS } from '../actions/types';\n\nconst initialState = {\n\tchips: []\n};\n\nexport default function(state = initialState, action) {\n\t// console.log(action);\n\n\tswitch (action.type) {\n\t\tcase GET_ALL_CHIPS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tchips: action.payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducers';\nimport errorReducer from './errorReducers';\nimport personsReducer from './personsReducer';\nimport chipsReducer from './chipsReducer';\n\nconst rootReducer = combineReducers({\n\tauth: authReducer,\n\terrors: errorReducer,\n\tpersons: personsReducer,\n\tchips: chipsReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nconst initialState = {};\nconst middleware = [ thunk ];\n\nconst store = createStore(\n\trootReducer,\n\tinitialState,\n\tcompose(\n\t\tapplyMiddleware(...middleware),\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\t)\n);\nexport default store;\n","import axios from 'axios';\n\nconst setAuthToken = (token) => {\n\tif (token) {\n\t\t// Apply authorization token to every request if logged in\n\t\taxios.defaults.headers.common['Authorization'] = token;\n\t} else {\n\t\t// Delete auth header\n\t\tdelete axios.defaults.headers.common['Authorization'];\n\t}\n};\nexport default setAuthToken;\n","import React from 'react';\nimport axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING, USER_IS_VERIFIED } from './types';\nimport { toast } from 'react-toastify';\n\nconst message = (msg) => <div>{msg}</div>;\nconst options = {\n\tautoClose: false,\n\ttype: toast.TYPE.ERROR,\n\thideProgressBar: false\n};\n\n// Register User\nexport const registerUser = (userData, history) => (dispatch) => {\n\taxios\n\t\t.post('/register', userData)\n\t\t.then((res) => {\n\t\t\t// console.log(res);\n\t\t\tif (res.data.status === 'success') {\n\t\t\t\thistory.push('/login'); // re-direct to login on successful register\n\t\t\t\ttoast.info(\n\t\t\t\t\tmessage(`Hello ${res.data.user.firstName}, please check your email to verify your account.!`)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\ttoast.dismiss();\n\t\t\t\ttoast(message(res.data.msg), options);\n\t\t\t}\n\t\t})\n\t\t.catch((err) =>\n\t\t\tdispatch({\n\t\t\t\ttype: GET_ERRORS,\n\t\t\t\tpayload: err.response.data\n\t\t\t})\n\t\t);\n};\n// Login - get user token\nexport const loginUser = (userData) => (dispatch) => {\n\taxios\n\t\t.post('/login', userData)\n\t\t.then((res) => {\n\t\t\t// console.log(res);\n\t\t\tif (res.data.status === 'isNotUser') {\n\t\t\t\ttoast.dismiss();\n\t\t\t\treturn toast(message(res.data.msg), options);\n\t\t\t}\n\t\t\tif (res.data.status === 'isNotVerified') {\n\t\t\t\treturn dispatch(isNotVerified());\n\t\t\t}\n\t\t\tif (res.data.status === 'error') {\n\t\t\t\ttoast.dismiss();\n\t\t\t\treturn toast(message(res.data.msg), options);\n\t\t\t} else {\n\t\t\t\t// Set token to localStorage\n\t\t\t\tconst token = res.data.token;\n\t\t\t\tlocalStorage.setItem('jwtToken', token);\n\t\t\t\t// Set token to Auth header\n\t\t\t\tsetAuthToken(token);\n\t\t\t\t// Decode token to get user data\n\t\t\t\tconst decoded = jwt_decode(token);\n\t\t\t\t// Set current user\n\t\t\t\tdispatch(setCurrentUser(decoded));\n\t\t\t}\n\t\t})\n\t\t.catch((err) =>\n\t\t\tdispatch({\n\t\t\t\ttype: GET_ERRORS,\n\t\t\t\tpayload: err\n\t\t\t})\n\t\t);\n};\n// Set logged in user\nexport function setCurrentUser(decoded) {\n\treturn {\n\t\ttype: SET_CURRENT_USER,\n\t\tpayload: decoded\n\t};\n}\n// User isNotVerified\nexport const isNotVerified = () => {\n\treturn {\n\t\ttype: USER_IS_VERIFIED\n\t};\n};\n// User loading\nexport const setUserLoading = () => {\n\treturn {\n\t\ttype: USER_LOADING\n\t};\n};\n// Log user out\nexport const logoutUser = () => (dispatch) => {\n\t// Remove token from local storage\n\tlocalStorage.removeItem('jwtToken');\n\t// Remove auth header for future requests\n\tsetAuthToken(false);\n\t// Set current user to empty object {} which will set isAuthenticated to false\n\tdispatch(setCurrentUser({}));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classes from './nav.module.scss';\nimport { logoutUser } from '../../actions/authActions';\n\nclass Nav extends React.Component {\n\tstate = {\n\t\tisPrivateNav: false\n\t};\n\t// to check if the nav receiving props to know witch nav i have to display\n\tUNSAFE_componentWillReceiveProps(nextProps) {\n\t\t// console.log(nextProps);\n\t\tif (nextProps.auth.isAuthenticated) {\n\t\t\tthis.setState({ isPrivateNav: true });\n\t\t} else {\n\t\t\tthis.setState({ isPrivateNav: false });\n\t\t}\n\t}\n\t// to checking the status of the user (if he still logged in) when the page reloaded\n\tcomponentDidMount() {\n\t\tif (localStorage.getItem('jwtToken')) {\n\t\t\tthis.setState({ isPrivateNav: true });\n\t\t} else {\n\t\t\tthis.setState({ isPrivateNav: false });\n\t\t}\n\t}\n\tonLogoutClick = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser();\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<nav className={classes.navBar}>\n\t\t\t\t<Link to=\"/\" className={classes.logo}>\n\t\t\t\t\t<img src={require('../../assest/Image/logo.png')} alt=\"logo\" />\n\t\t\t\t</Link>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<NavLink to=\"/\">Home</NavLink>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t{this.state.isPrivateNav ? (\n\t\t\t\t\t\t\t<NavLink to=\"/dashboard\">Dashboard</NavLink>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<NavLink to=\"login\">Login</NavLink>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t{this.state.isPrivateNav ? (\n\t\t\t\t\t\t\t<NavLink to=\"/\" onClick={this.onLogoutClick}>\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<NavLink to=\"register\">Register</NavLink>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t);\n\t}\n}\nNav.propTypes = {\n\tauth: PropTypes.object.isRequired,\n\tlogoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(Nav);\n","import React, { Component } from 'react';\n\nclass Homepage extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Hello from Home page</h1>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Homepage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as Yup from \"yup\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport classes from \"../../assest/form.module.scss\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\n// to validate the form\nconst SignUpSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .required(\"Required\")\n    .min(6, \"Password is too short - should be 8 chars minimum.\")\n});\nclass Register extends React.Component {\n  state = {\n    errors: {},\n    isHide: true,\n    isNotRobot: false\n  };\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n  submitHandler = values => {\n    const recaptcha = document.querySelector(\"iframe[name]\");\n    if (this.state.isNotRobot) {\n      this.props.registerUser(values, this.props.history);\n    } else {\n      recaptcha.style.border = \"1px solid red\";\n      toast.dismiss();\n      toast.error(<div>Please check the box 'I am not a Robot'</div>);\n    }\n  };\n  // to show and hide the password\n  passwordHandler = () => {\n    const inputPassword = document.getElementById(\"inputPassword\");\n    if (this.state.isHide) {\n      inputPassword.type = \"text\";\n      this.setState({ isHide: false });\n    } else {\n      inputPassword.type = \"password\";\n      this.setState({ isHide: true });\n    }\n  };\n  onReCAPTCHA = value => {\n    const recaptcha = document.querySelector(\"iframe[name]\");\n    recaptcha.style.border = \"none\";\n    this.setState({ isNotRobot: !this.state.isNotRobot });\n  };\n  render() {\n    // to hide the error message if the user does not close it\n    toast.dismiss();\n    return (\n      <div className={classes.formContainer}>\n        <h1>Register</h1>\n        <Formik\n          initialValues={{\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            password: \"\"\n          }}\n          validationSchema={SignUpSchema}\n          onSubmit={values => {\n            this.submitHandler(values);\n          }}\n        >\n          {({ errors, touched }) => (\n            <Form>\n              <div>\n                <Field\n                  type=\"text\"\n                  name=\"firstName\"\n                  placeholder=\"Enter First Name\"\n                />\n                {errors.firstName && touched.firstName ? (\n                  <div className={classes.errors}>{errors.firstName}</div>\n                ) : null}\n              </div>\n              <div>\n                <Field\n                  type=\"text\"\n                  name=\"lastName\"\n                  placeholder=\"Enter Last Name\"\n                />\n                {errors.lastName && touched.lastName ? (\n                  <div className={classes.errors}>{errors.lastName}</div>\n                ) : null}\n              </div>\n              <div>\n                <Field name=\"email\" type=\"email\" placeholder=\"Enter Email\" />\n                {errors.email && touched.email ? (\n                  <div className={classes.errors}>{errors.email}</div>\n                ) : null}\n              </div>\n              <div>\n                <Field\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Create Password\"\n                  id=\"inputPassword\"\n                />\n                {errors.password && touched.password ? (\n                  <div className={classes.errors}>{errors.password}</div>\n                ) : null}\n                <i\n                  className={\n                    this.state.isHide ? \"fas fa-eye-slash\" : \"fas fa-eye\"\n                  }\n                  onClick={this.passwordHandler}\n                />\n              </div>\n              <input type=\"submit\" value=\"Register\" />\n              <p>\n                Already have an account <Link to=\"/login\">Login</Link>\n              </p>\n            </Form>\n          )}\n        </Formik>\n        <ReCAPTCHA\n          sitekey=\"6Let4MQUAAAAAEQMF88qwTV1oqjrMgP8iqUSO2Qk\"\n          onChange={this.onReCAPTCHA}\n          className={classes.notRobot}\n          hl={\"en\"}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  msg: state.msg\n});\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport { toast } from \"react-toastify\";\nimport classes from \"../../assest/form.module.scss\";\nimport axios from \"axios\";\n\n// to validate the form\nconst SignInSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email\")\n    .required(\"Required\"),\n  password: Yup.string()\n    .required(\"Required\")\n    .min(6, \"Password is too short\")\n});\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    msg: null,\n    error: null,\n    isHide: true,\n    isVerified: true\n  };\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // console.log(nextProps);\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n    if (nextProps.error) {\n      this.setState({ error: nextProps.error });\n    }\n    if (!nextProps.isVerified) {\n      this.setState({ isVerified: false });\n    }\n    this.setState({ isVerified: nextProps.isVerified });\n  }\n  submitHandler(values) {\n    this.setState({ email: values.email, isVerified: true });\n    this.props.loginUser(values); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  }\n  // to show and hide the password\n  passwordHandler = () => {\n    const inputPassword = document.getElementById(\"inputPassword\");\n    if (this.state.isHide) {\n      inputPassword.type = \"text\";\n      this.setState({ isHide: false });\n    } else {\n      inputPassword.type = \"password\";\n      this.setState({ isHide: true });\n    }\n  };\n  sendEmailVerify = () => {\n    const userData = {};\n    userData.email = this.state.email;\n    console.log(userData);\n    axios.post(\"/resendVerifyEmail\", userData).then(res => {\n      console.log(res);\n      if (res.data.status === \"success\") {\n        toast.info(<div>{res.data.msg}</div>);\n      } else {\n        this.setState({ msg: res.data.msg });\n      }\n      this.setState({ isVerified: true });\n    });\n  };\n  render(props) {\n    // to hide the error message if the user does not close it\n    toast.dismiss();\n    return (\n      <div className={classes.formContainer}>\n        <h1>Welcome</h1>\n        {!this.state.isVerified && (\n          <p className={classes.msgErrors}>\n            Your account has not been verified, please check your email.!\n            <br />\n            <span onClick={this.sendEmailVerify} className={classes.sendEmail}>\n              or click here to send email again\n            </span>\n          </p>\n        )}\n        {this.state.msg && !this.state.isVerified && (\n          <p className={classes.msgErrors}>{this.state.msg}</p>\n        )}\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\"\n          }}\n          validationSchema={SignInSchema}\n          onSubmit={values => {\n            this.submitHandler(values);\n          }}\n        >\n          {({ errors, touched }) => (\n            <Form>\n              <div>\n                <Field type=\"email\" placeholder=\"Enter Email\" name=\"email\" />\n                {errors.email && touched.email ? (\n                  <div className={classes.errors}>{errors.email}</div>\n                ) : null}\n              </div>\n              <div>\n                <Field\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  name=\"password\"\n                  id=\"inputPassword\"\n                />\n                {errors.password && touched.password ? (\n                  <div className={classes.errors}>{errors.password}</div>\n                ) : null}\n                <i\n                  className={\n                    this.state.isHide ? \"fas fa-eye-slash\" : \"fas fa-eye \"\n                  }\n                  onClick={this.passwordHandler}\n                />\n                <Link to=\"/forgotPassword\" className={classes.forgotPassword}>\n                  Forgot your password?\n                </Link>\n              </div>\n              <input type=\"submit\" value=\"Login\" />\n              <p>\n                Create a Account? <Link to=\"/register\">Register</Link>\n              </p>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  error: PropTypes.object.isRequired,\n  isVerified: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  error: state.error,\n  isVerified: state.isVerified\n});\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React from 'react';\nimport axios from 'axios';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport classes from '../../assest/form.module.scss';\n\nconst message = (msg) => <div>{msg}</div>;\nconst options = {\n\tautoClose: false,\n\ttype: toast.TYPE.ERROR,\n\thideProgressBar: false\n};\n\n// to validate the form\nconst ForgotPassSchema = Yup.object().shape({\n\temail: Yup.string().email('Invalid email').required('Required')\n});\n\nclass ForgotPassword extends React.Component {\n\tsubmitHandler = (values) => {\n\t\taxios.post('/forgotPassword', values).then((res) => {\n\t\t\tif (res.data.status === 'success') {\n\t\t\t\ttoast.info(message(`${res.data.result}`));\n\t\t\t} else {\n\t\t\t\ttoast(message(res.data.msg), options);\n\t\t\t}\n\t\t});\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.formContainer}>\n\t\t\t\t<h1>Forgot Password</h1>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\temail: ''\n\t\t\t\t\t}}\n\t\t\t\t\tvalidationSchema={ForgotPassSchema}\n\t\t\t\t\tonSubmit={(values) => {\n\t\t\t\t\t\tthis.submitHandler(values);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ errors, touched }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label>Please type your email address to change your password</label>\n\t\t\t\t\t\t\t\t<Field type=\"email\" placeholder=\"Email Addess\" name=\"email\" />\n\t\t\t\t\t\t\t\t{errors.email && touched.email ? (\n\t\t\t\t\t\t\t\t\t<div className={classes.errors}>{errors.email}</div>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"Send Email\" />\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default ForgotPassword;\n","import React from 'react';\nimport axios from 'axios';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport classes from '../../assest/form.module.scss';\n\nconst message = (msg) => <div>{msg}</div>;\nconst options = {\n\tautoClose: false,\n\ttype: toast.TYPE.ERROR,\n\thideProgressBar: false\n};\n\n// to validate the form\nconst ResetPassSchema = Yup.object().shape({\n\tpassword: Yup.string().required('Required').min(6, 'Password is too short - should be 6 chars minimum.')\n});\n\nclass ResetPassword extends React.Component {\n\tstate = {\n\t\temail: null,\n\t\terror: null,\n\t\tupdated: false\n\t};\n\tcomponentDidMount() {\n\t\taxios.post(`/resetPassword/${this.props.match.params.id}`).then((response) => {\n\t\t\tif (response.data.status === 'success') {\n\t\t\t\tthis.setState({ email: response.data.email });\n\t\t\t} else {\n\t\t\t\tthis.setState({ error: response.data.msg });\n\t\t\t}\n\t\t});\n\t}\n\tsubmitHandler = (values) => {\n\t\tlet userData = {\n\t\t\temail: this.state.email,\n\t\t\t...values\n\t\t};\n\t\taxios.post('/updatePasswordViaEmail', userData).then((response) => {\n\t\t\tif (response.data.status === 'success') {\n\t\t\t\tthis.setState({ updated: true });\n\t\t\t} else {\n\t\t\t\tthis.setState({ updated: false });\n\t\t\t\ttoast(message(response.data.msg), options);\n\t\t\t}\n\t\t});\n\t};\n\tloginHandler = () => {\n\t\tthis.props.history.replace('/login');\n\t};\n\tsendEmailAgainHandler = () => {\n\t\tthis.props.history.replace('/forgotPassword');\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.formContainer}>\n\t\t\t\t{this.state.error && (\n\t\t\t\t\t<div className=\"resetPassword\">\n\t\t\t\t\t\t<h3>{this.state.error}</h3>\n\t\t\t\t\t\t<button onClick={this.sendEmailAgainHandler}>Send Email Again</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{this.state.updated && (\n\t\t\t\t\t<div className=\"resetPassword\">\n\t\t\t\t\t\t<h3>Your password has been successfully reset, please try logging in again. </h3>\n\t\t\t\t\t\t<button onClick={this.loginHandler}>Login</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{!this.state.error &&\n\t\t\t\t!this.state.updated && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<h1>Reset Password</h1>\n\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t\t\tpassword: ''\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvalidationSchema={ResetPassSchema}\n\t\t\t\t\t\t\tonSubmit={(values) => {\n\t\t\t\t\t\t\t\tthis.submitHandler(values);\n\t\t\t\t\t\t\t\tconsole.log(values);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({ errors, touched }) => (\n\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<label>{this.state.email}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Field type=\"password\" placeholder=\"Enter New Password\" name=\"password\" />\n\t\t\t\t\t\t\t\t\t\t{errors.password && touched.password ? (\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.errors}>{errors.password}</div>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Save\" />\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Formik>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default ResetPassword;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Confirmation extends Component {\n\tstate = {\n\t\tmsg: null,\n\t\tisVerified: false\n\t};\n\tcomponentDidMount() {\n\t\taxios.post(`/confirmation/${this.props.match.params.id}`).then((response) => {\n\t\t\tconsole.log(response);\n\t\t\tif (response.data.status === 'success') {\n\t\t\t\tthis.setState({ msg: response.data.msg, isVerified: true });\n\t\t\t} else {\n\t\t\t\tthis.setState({ msg: response.data.msg, isVerified: false });\n\t\t\t}\n\t\t});\n\t}\n\tloginHandler = () => {\n\t\tthis.props.history.replace('/login');\n\t};\n\tregisterHandler = () => {\n\t\tthis.props.history.replace('/register');\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"confirmation\">\n\t\t\t\t<h3>{this.state.msg}</h3>\n\t\t\t\t{this.state.isVerified ? (\n\t\t\t\t\t<button onClick={this.loginHandler}>Go To Login</button>\n\t\t\t\t) : (\n\t\t\t\t\t<button onClick={this.registerHandler}>Go To Register</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Confirmation;\n","import React from 'react';\nimport axios from 'axios';\nimport { GET_ALL_PERSONS } from './types';\nimport { toast } from 'react-toastify';\n\nconst message = (msg) => <div>{msg}</div>;\nconst options = {\n\tautoClose: false,\n\ttype: toast.TYPE.ERROR,\n\thideProgressBar: false\n};\n\n// Get all persons data\nexport const getAllPersons = () => (dispatch) => {\n\taxios.get('/dashboard/persons').then((res) => {\n\t\tif (res.data.status === 'success') {\n\t\t\tdispatch(setPersons(res.data.persons));\n\t\t}\n\t});\n};\n\n// Edit person data\nexport const editPersonData = (personData) => (dispatch) => {\n\taxios.post('/dashboard/editPerson', personData).then((res) => {\n\t\tif (res.data.status === 'success') {\n\t\t\t// to get the new data after edit\n\t\t\tdispatch(getAllPersons());\n\t\t} else {\n\t\t\ttoast.dismiss();\n\t\t\ttoast(message(res.data.msg), options);\n\t\t}\n\t});\n};\n\n// Set persons in global array\nexport function setPersons(persons) {\n\treturn {\n\t\ttype: GET_ALL_PERSONS,\n\t\tpayload: persons\n\t};\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { GET_ALL_CHIPS } from './types';\nimport { toast } from 'react-toastify';\n\nconst message = (msg) => <div>{msg}</div>;\nconst options = {\n\tautoClose: false,\n\ttype: toast.TYPE.ERROR,\n\thideProgressBar: false\n};\n\n// Get all chips data\nexport const getAllChips = () => (dispatch) => {\n\taxios.get('/dashboard/chips').then((res) => {\n\t\tif (res.data.status === 'success') {\n\t\t\tdispatch(setChips(res.data.chips));\n\t\t} else {\n\t\t\ttoast.dismiss();\n\t\t\ttoast(message(res.data.msg), options);\n\t\t}\n\t});\n};\n\n// Set chips in global array\nexport function setChips(chips) {\n\treturn {\n\t\ttype: GET_ALL_CHIPS,\n\t\tpayload: chips\n\t};\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllPersons } from '../../../actions/personsActions';\nimport { getAllChips } from '../../../actions/chipsActions';\nimport Calendar from 'react-calendar';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport classes from '../dashboard.module.scss';\n\n// to formate the time\nconst getFullTime = (date) => {\n\tconst newDate = new Date(date);\n\tlet hours = newDate.getHours();\n\tlet minute = newDate.getMinutes();\n\n\tif (hours < 10) {\n\t\thours = '0' + hours;\n\t}\n\tif (minute < 10) {\n\t\tminute = '0' + minute;\n\t}\n\treturn `${hours}:${minute}`;\n};\n// to add the formate the time in the colum coming and leaving.\nconst timeFormatter = (cell, row) => {\n\tif (cell) {\n\t\treturn getFullTime(cell);\n\t}\n\treturn '-';\n};\n\nclass DailyCheck extends React.Component {\n\tstate = {\n\t\tdate: new Date(),\n\t\tchipsList: [],\n\t\tswipesOfDate: [],\n\t\tpersons: [],\n\t\tfinalListOfPersons: [],\n\t\tisOpen: false\n\t};\n\tcomponentDidMount() {\n\t\tthis.props.getAllChips();\n\t\tthis.props.getAllPersons();\n\t}\n\tUNSAFE_componentWillReceiveProps(nextProps) {\n\t\tthis.setState({ chipsList: [ ...nextProps.chips.chips ], persons: [ ...nextProps.persons.persons ] });\n\t}\n\tonChange = (date) => this.setState({ date });\n\tonClickDay = (day) => {\n\t\t// copy of chipsList in state\n\t\tconst chipsList = [ ...this.state.chipsList ];\n\t\t// here i will save the all Chips that swiped today as array of object\n\t\tlet swipesOfDate = [];\n\n\t\tfor (let i = 0; i < chipsList.length; i++) {\n\t\t\t// here i will save the date of today and how many swipes happened on this day\n\t\t\tlet obj = {};\n\t\t\tlet swipes = chipsList[i].swipes;\n\t\t\t// here i will get the swipes of today\n\t\t\tlet swipesOfToday = swipes.filter(\n\t\t\t\t(item) =>\n\t\t\t\t\tday.getFullYear() === new Date(item).getFullYear() &&\n\t\t\t\t\tday.getMonth() === new Date(item).getMonth() &&\n\t\t\t\t\tday.getDate() === new Date(item).getDate()\n\t\t\t);\n\t\t\t// here i update my obj with this values\n\t\t\tobj.coming = swipesOfToday[0];\n\t\t\tobj.leaving = swipesOfToday[swipesOfToday.length - 1];\n\t\t\tobj.chipNumber = chipsList[i].chipNumber;\n\t\t\t// here i pushed the obj to the final array 'swipesOfDate'\n\t\t\tswipesOfDate.push(obj);\n\t\t}\n\n\t\tthis.setState({ swipesOfDate: swipesOfDate, isOpen: true }, () => {\n\t\t\tthis.compareChipsAndPersons();\n\t\t});\n\t};\n\tcompareChipsAndPersons = () => {\n\t\t// just to copy this arrays from state\n\t\tlet persons = [ ...this.state.persons ];\n\t\tlet swipesOfDate = [ ...this.state.swipesOfDate ];\n\t\tlet finalListOfPersons = [];\n\n\t\tpersons.forEach((e1) =>\n\t\t\tswipesOfDate.forEach((e2) => {\n\t\t\t\tif (e1.rfId === e2.chipNumber) {\n\t\t\t\t\te2.firstName = e1.firstName;\n\t\t\t\t\tfinalListOfPersons.push(e2);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.setState({ finalListOfPersons: finalListOfPersons });\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<section className={classes.dailyCheckContainer}>\n\t\t\t\t<Calendar locale=\"en\" onClickDay={this.onClickDay} onChange={this.onChange} value={this.state.date} />\n\t\t\t\t{this.state.isOpen ? (\n\t\t\t\t\t<BootstrapTable\n\t\t\t\t\t\tdata={this.state.finalListOfPersons}\n\t\t\t\t\t\tsearch={true}\n\t\t\t\t\t\tmultiColumnSearch={true}\n\t\t\t\t\t\tpagination={true}\n\t\t\t\t\t\theaderStyle={{ color: '#000033' }}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\tsizePerPage: 5,\n\t\t\t\t\t\t\tsizePerPageList: [ 5, 10, { text: 'All', value: this.state.finalListOfPersons.length } ],\n\t\t\t\t\t\t\tclearSearch: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableHeaderColumn isKey dataField=\"firstName\" dataSort={true}>\n\t\t\t\t\t\t\tName\n\t\t\t\t\t\t</TableHeaderColumn>\n\t\t\t\t\t\t<TableHeaderColumn dataField=\"coming\" dataFormat={timeFormatter}>\n\t\t\t\t\t\t\tComing\n\t\t\t\t\t\t</TableHeaderColumn>\n\t\t\t\t\t\t<TableHeaderColumn dataField=\"leaving\" dataFormat={timeFormatter}>\n\t\t\t\t\t\t\tLeaving\n\t\t\t\t\t\t</TableHeaderColumn>\n\t\t\t\t\t</BootstrapTable>\n\t\t\t\t) : (\n\t\t\t\t\t<p className={classes.tip}>Please choose a day to see details</p>\n\t\t\t\t)}\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nDailyCheck.propTypes = {\n\tgetAllPersons: PropTypes.func.isRequired,\n\tgetAllChips: PropTypes.func.isRequired\n};\nconst mapStateToProps = (state) => ({\n\tpersons: state.persons,\n\tchips: state.chips\n});\n\nexport default connect(mapStateToProps, { getAllPersons, getAllChips })(DailyCheck);\n","import React from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { editPersonData } from '../../../actions/personsActions';\nimport classes from '../dashboard.module.scss';\n\n// to validate the form\nconst EditSchema = Yup.object().shape({\n\tfirstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n\trfId: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n\temail: Yup.string().email('Invalid email').required('Required')\n});\n\nclass FormEditor extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.submitHandler = this.submitHandler.bind(this);\n\t\tthis.state = {\n\t\t\tpersonData: {\n\t\t\t\t_id: props.row._id,\n\t\t\t\tfirstName: props.row.firstName,\n\t\t\t\trfId: props.row.rfId,\n\t\t\t\temail: props.row.email\n\t\t\t},\n\t\t\troles: props.row.roles,\n\t\t\tisOpen: true\n\t\t};\n\t}\n\tsubmitHandler(values) {\n\t\tlet personData = {\n\t\t\troles: this.state.roles,\n\t\t\t...values\n\t\t};\n\t\tthis.props.onUpdate(this.props.defaultValue);\n\t\tthis.props.editPersonData(personData);\n\t\tthis.setState({ isOpen: false });\n\t}\n\tclose = () => {\n\t\tthis.setState({ isOpen: false });\n\t\tthis.props.onUpdate(this.props.defaultValue);\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.state.isOpen ? (\n\t\t\t\t\t<div className={classes.editContainer}>\n\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\tinitialValues={{ ...this.state.personData }}\n\t\t\t\t\t\t\tvalidationSchema={EditSchema}\n\t\t\t\t\t\t\tonSubmit={(values) => {\n\t\t\t\t\t\t\t\tthis.submitHandler(values);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({ errors, touched }) => (\n\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t<div className={classes.inputItem}>\n\t\t\t\t\t\t\t\t\t\t<label>First Name:</label>\n\t\t\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"firstName\" placeholder=\"Enter First Name\" />\n\t\t\t\t\t\t\t\t\t\t{errors.firstName && touched.firstName ? (\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.errors}>{errors.firstName}</div>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classes.inputItem}>\n\t\t\t\t\t\t\t\t\t\t<label>Email:</label>\n\t\t\t\t\t\t\t\t\t\t<Field name=\"email\" placeholder=\"Enter Email\" type=\"email\" />\n\t\t\t\t\t\t\t\t\t\t{errors.email && touched.email ? (\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.errors}>{errors.email}</div>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classes.inputItem}>\n\t\t\t\t\t\t\t\t\t\t<label>Chip Number:</label>\n\t\t\t\t\t\t\t\t\t\t<Field type=\"text\" name=\"rfId\" placeholder=\"Enter Chip Number\" />\n\t\t\t\t\t\t\t\t\t\t{errors.rfId && touched.rfId ? (\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.errors}>{errors.rfId}</div>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={classes.inputItem}>\n\t\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={this.close}>\n\t\t\t\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Save\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t<div className={classes.blackBg} onClick={this.close} />\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nFormEditor.propTypes = {\n\teditPersonData: PropTypes.func.isRequired\n};\n\nexport default connect(null, { editPersonData })(FormEditor);\n","import React from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport classes from '../dashboard.module.scss';\n\nconst roles = [ 'Manager', 'Member', 'Null' ];\n\nclass RolesEditor extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpersonData: {\n\t\t\t\t_id: props.row._id,\n\t\t\t\tfirstName: props.row.firstName,\n\t\t\t\trfId: props.row.rfId,\n\t\t\t\temail: props.row.email\n\t\t\t},\n\t\t\troles: props.defaultValue\n\t\t};\n\t\tthis.updateData = this.updateData.bind(this);\n\t\tthis.onToggleRoles = this.onToggleRoles.bind(this);\n\t}\n\tonToggleRoles(event) {\n\t\tconst roles = event.currentTarget.name;\n\t\tif (this.state.roles[0] === 'App Manager') {\n\t\t\treturn;\n\t\t} else if (this.state.roles.indexOf(roles) < 0) {\n\t\t\tthis.setState({ roles: [ roles ] });\n\t\t} else {\n\t\t\tthis.setState({ roles: this.state.roles.filter((r) => r !== roles) });\n\t\t}\n\t}\n\tupdateData() {\n\t\tthis.props.onUpdate(this.state.roles);\n\t\tlet personData = {\n\t\t\troles: this.state.roles,\n\t\t\t...this.state.personData\n\t\t};\n\t\taxios.post('/dashboard/editPerson', personData).then((res) => {\n\t\t\t// console.log(res);\n\t\t\tif (res.data.status === 'success') {\n\t\t\t\tthis.setState({ open: false });\n\t\t\t} else {\n\t\t\t\ttoast.dismiss();\n\t\t\t\ttoast.error(<div>{res.data.msg}</div>);\n\t\t\t}\n\t\t});\n\t}\n\trender() {\n\t\tconst rolesCheckBoxes = roles.map((roles) => (\n\t\t\t<div key={`div-${roles}`}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tkey={roles}\n\t\t\t\t\tname={roles}\n\t\t\t\t\tchecked={this.state.roles.indexOf(roles) > -1}\n\t\t\t\t\tonKeyDown={this.props.onKeyDown}\n\t\t\t\t\tonChange={this.onToggleRoles}\n\t\t\t\t/>\n\t\t\t\t<label key={`label-${roles}`} htmlFor={roles}>\n\t\t\t\t\t{roles}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t));\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{rolesCheckBoxes}\n\t\t\t\t<button className={classes.selectButton} onClick={this.updateData}>\n\t\t\t\t\tSave\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default RolesEditor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllPersons } from '../../../actions/personsActions';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport FormEditor from './formEditore';\nimport RolesEditor from './rolesEditor';\nimport classes from '../dashboard.module.scss';\n\n// to add the circle in the colum isVerified.\nconst isVerifiedFormatter = (cell, row) => {\n\tif (cell === true) {\n\t\treturn '<i class=\"fas fa-circle green\"></i> ' + cell;\n\t}\n\treturn '<i class=\"fas fa-circle red\"></i> ' + cell;\n};\n// to add and style the roles items in the colum roles.\nconst rolesFormatter = (cell, row) => {\n\tif (cell[0] === 'Null') {\n\t\treturn <span style={{ color: '#ff000088' }}>{(cell || []).join(', ')}</span>;\n\t} else if (cell[0] === 'App Manager') {\n\t\treturn <span style={{ color: '#000033' }}>{(cell || []).join(', ')}</span>;\n\t}\n\treturn <span>{(cell || []).join(', ')}</span>;\n};\n\n/*\n\tThe getElement function take two arguments,\n    1. onUpdate: if you want to apply the modified data, call this function\n    2. props: contain customEditorParameters, whole row data, defaultValue and attrs\n*/\nconst createTextEditor = (onUpdate, props) => <FormEditor onUpdate={onUpdate} {...props} />;\nconst createRolesEditor = (onUpdate, props) => <RolesEditor onUpdate={onUpdate} {...props} />;\n\nclass Members extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.getAllPersons();\n\t}\n\trender() {\n\t\tconst cellEditProp = {\n\t\t\tmode: 'click'\n\t\t};\n\t\tconst { persons } = this.props.persons;\n\t\treturn (\n\t\t\t<section className={classes.membersContainer}>\n\t\t\t\t<BootstrapTable\n\t\t\t\t\tdata={persons}\n\t\t\t\t\tcellEdit={cellEditProp}\n\t\t\t\t\tsearch={true}\n\t\t\t\t\tmultiColumnSearch={true}\n\t\t\t\t\tpagination={true}\n\t\t\t\t\theaderStyle={{ color: '#000033' }}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tsizePerPage: 5,\n\t\t\t\t\t\tsizePerPageList: [ 5, 10, { text: 'All', value: persons.length } ],\n\t\t\t\t\t\tclearSearch: true\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<TableHeaderColumn\n\t\t\t\t\t\tdataField=\"rfId\"\n\t\t\t\t\t\tdataSort={true}\n\t\t\t\t\t\tcustomEditor={{ getElement: createTextEditor }}\n\t\t\t\t\t\tthStyle={{ width: '15%' }}\n\t\t\t\t\t\ttdStyle={{ width: '15%' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tChip Number\n\t\t\t\t\t</TableHeaderColumn>\n\t\t\t\t\t<TableHeaderColumn\n\t\t\t\t\t\tdataField=\"firstName\"\n\t\t\t\t\t\tcustomEditor={{ getElement: createTextEditor }}\n\t\t\t\t\t\tthStyle={{ width: '15%' }}\n\t\t\t\t\t\ttdStyle={{ width: '15%' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tName\n\t\t\t\t\t</TableHeaderColumn>\n\t\t\t\t\t<TableHeaderColumn dataField=\"email\" customEditor={{ getElement: createTextEditor }}>\n\t\t\t\t\t\tE-mail\n\t\t\t\t\t</TableHeaderColumn>\n\t\t\t\t\t<TableHeaderColumn\n\t\t\t\t\t\tdataField=\"roles\"\n\t\t\t\t\t\tdataFormat={rolesFormatter}\n\t\t\t\t\t\tcustomEditor={{ getElement: createRolesEditor }}\n\t\t\t\t\t>\n\t\t\t\t\t\tRoles\n\t\t\t\t\t</TableHeaderColumn>\n\t\t\t\t\t<TableHeaderColumn\n\t\t\t\t\t\tisKey\n\t\t\t\t\t\tdataField=\"isVerified\"\n\t\t\t\t\t\tthStyle={{ width: '90px' }}\n\t\t\t\t\t\ttdStyle={{ width: '90px' }}\n\t\t\t\t\t\tdataFormat={isVerifiedFormatter}\n\t\t\t\t\t>\n\t\t\t\t\t\tVerified\n\t\t\t\t\t</TableHeaderColumn>\n\t\t\t\t</BootstrapTable>\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nMembers.propTypes = {\n\tgetAllPersons: PropTypes.func.isRequired\n};\nconst mapStateToProps = (state) => ({\n\tpersons: state.persons\n});\n\nexport default connect(mapStateToProps, { getAllPersons })(Members);\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {} from '../../../actions/authActions';\nimport classes from '../dashboard.module.scss';\n\nclass Profile extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<section className={classes.profileContainer}>\n\t\t\t\t<header />\n\t\t\t\t<section className={classes.content}>\n\t\t\t\t\t<figure />\n\t\t\t\t\t<h5>User Name</h5>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<main />\n\t\t\t\t\t<div className=\"portfolioSwiper\">{/* <Slide /> */}</div>\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t);\n\t}\n}\nProfile.propTypes = {};\nconst mapStateToProps = (state) => ({});\n\nexport default connect(mapStateToProps, null)(Profile);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../../actions/authActions';\nimport classes from '../dashboard.module.scss';\nimport DailyCheck from './dailyCheck';\nimport Members from './members';\nimport Profile from './profile';\n\nclass Manager extends React.Component {\n\tstate = {\n\t\titemDisplayed: null,\n\t\tsidebarItems: [\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\ticon: 'fas fa-columns',\n\t\t\t\ttext: 'Daily Check'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 2,\n\t\t\t\ticon: 'fas fa-user-tie',\n\t\t\t\ttext: 'Profile'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 3,\n\t\t\t\ticon: 'fas fa-users',\n\t\t\t\ttext: 'Members'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 4,\n\t\t\t\ticon: 'fas fa-border-all',\n\t\t\t\ttext: 'Category'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 5,\n\t\t\t\ticon: 'far fa-folder-open',\n\t\t\t\ttext: 'Archive'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 6,\n\t\t\t\ticon: 'far fa-calendar-alt',\n\t\t\t\ttext: 'Calendar'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 7,\n\t\t\t\ticon: 'fas fa-cog',\n\t\t\t\ttext: 'Setting'\n\t\t\t}\n\t\t]\n\t};\n\tclickHandler = (e) => {\n\t\tlet itemDisplayed = e.target.innerText;\n\t\tthis.setState({ itemDisplayed: itemDisplayed });\n\t};\n\tswitchItemsInSidebar = (itemDisplayed) => {\n\t\tswitch (itemDisplayed) {\n\t\t\tcase 'Daily Check':\n\t\t\t\treturn <DailyCheck />;\n\t\t\tcase 'Members':\n\t\t\t\treturn <Members />;\n\t\t\tcase 'Profile':\n\t\t\t\treturn <Profile />;\n\t\t\tdefault:\n\t\t\t\treturn <h1 className={classes.comingSoon}>Coming soon.!</h1>;\n\t\t}\n\t};\n\tonLogoutClick = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.logoutUser();\n\t};\n\trender() {\n\t\tconst { user } = this.props.auth;\n\t\treturn (\n\t\t\t<section className={classes.managerContainer}>\n\t\t\t\t<section className={classes.sidebarContainer}>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<i className=\"fas fa-user-tie\" />\n\t\t\t\t\t\t<h4>{user.firstName}</h4>\n\t\t\t\t\t</header>\n\t\t\t\t\t<aside>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{this.state.sidebarItems.map((item) => (\n\t\t\t\t\t\t\t\t<li key={item.id} onClick={(e) => this.clickHandler(e)}>\n\t\t\t\t\t\t\t\t\t<i className={item.icon} />\n\t\t\t\t\t\t\t\t\t{item.text}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</aside>\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<button onClick={this.onLogoutClick}>\n\t\t\t\t\t\t\t<i className=\"fas fa-sign-out-alt\" />\n\t\t\t\t\t\t\t<p>Logout</p>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</footer>\n\t\t\t\t</section>\n\t\t\t\t{this.switchItemsInSidebar(this.state.itemDisplayed)}\n\t\t\t</section>\n\t\t);\n\t}\n}\nManager.propTypes = {\n\tauth: PropTypes.object.isRequired,\n\tlogoutUser: PropTypes.func.isRequired\n};\nconst mapStateToProps = (state) => ({\n\tauth: state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(Manager);\n","import React from 'react';\nimport classes from '../dashboard.module.scss';\n\nclass Employee extends React.Component {\n\trender() {\n\t\treturn <section className={classes.employeeContainer}>Employee</section>;\n\t}\n}\nexport default Employee;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Manager from './components/manager';\nimport Employee from './components/employee';\nimport { connect } from 'react-redux';\n\nclass Dashboard extends Component {\n\t// to check if the user has a role and what is it.!\n\tcheckRoleOfUser(roles) {\n\t\tlet userRole = null;\n\t\tfor (let i = 0; i < roles.length; i++) {\n\t\t\tif (roles[i] === 'App Manager' || 'Company Manager') {\n\t\t\t\tuserRole = roles[i];\n\t\t\t}\n\t\t\treturn userRole;\n\t\t}\n\t}\n\t// to see which dashboard for this role\n\tuserSwitch = (role) => {\n\t\tswitch (this.checkRoleOfUser(role)) {\n\t\t\tcase 'App Manager' || 'Company Manager':\n\t\t\t\treturn <Manager />;\n\t\t\tdefault:\n\t\t\t\treturn <Employee />;\n\t\t}\n\t};\n\trender() {\n\t\tconst { user } = this.props.auth;\n\t\treturn <React.Fragment>{this.userSwitch(user.roles)}</React.Fragment>;\n\t}\n}\nDashboard.propTypes = {\n\tauth: PropTypes.object.isRequired\n};\nconst mapStateToProps = (state) => ({\n\tauth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(Dashboard);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n\t<Route\n\t\t{...rest}\n\t\trender={(props) => (auth.isAuthenticated === true ? <Component {...props} /> : <Redirect to=\"/login\" />)}\n\t/>\n);\nPrivateRoute.propTypes = {\n\tauth: PropTypes.object.isRequired\n};\nconst mapStateToProps = (state) => ({\n\tauth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Error404() {\n\treturn (\n\t\t<div>\n\t\t\t<h1>Error 404</h1>\n\t\t\t<Link to=\"/\">Go To HomePage</Link>\n\t\t</div>\n\t);\n}\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Nav from './components/Nav/nav';\nimport Homepage from './pages/Homepage/homepage';\nimport Register from './pages/Register/register';\nimport Login from './pages/Login/login';\nimport ForgotPassword from './pages/ForgotPass/forgotPassword';\nimport ResetPassword from './pages/ResetPass/resetPassword';\nimport Confirmation from './pages/Confirmation/confirmation';\nimport Dashboard from './pages/Dashboard/dashboard';\nimport PrivateRoute from './components/private-route/PrivateRoute';\nimport Error404 from './components/Error-404';\nimport store from './store';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n\t// Set auth token header auth\n\tconst token = localStorage.jwtToken;\n\tsetAuthToken(token);\n\t// Decode token and get user info and exp\n\tconst decoded = jwt_decode(token);\n\t// Set user and isAuthenticated\n\tstore.dispatch(setCurrentUser(decoded));\n\t// Check for expired token\n\tconst currentTime = Date.now() / 1000; // to get in milliseconds\n\tif (decoded.exp < currentTime) {\n\t\t// Logout user\n\t\tstore.dispatch(logoutUser());\n\t\t// Redirect to login\n\t\twindow.location.href = './login';\n\t}\n}\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<ToastContainer position=\"top-center\" autoClose={8000} />\n\t\t\t\t<Nav />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" render={(props) => <Homepage {...props} />} />\n\t\t\t\t\t<Route exact path=\"/register\" render={(props) => <Register {...props} />} />\n\t\t\t\t\t<Route exact path=\"/login\" render={(props) => <Login {...props} />} />\n\t\t\t\t\t<Route exact path=\"/forgotPassword\" render={(props) => <ForgotPassword {...props} />} />\n\t\t\t\t\t<Route exact path=\"/resetPassword/:id\" render={(props) => <ResetPassword {...props} />} />\n\t\t\t\t\t<Route exact path=\"/confirmation/:id\" render={(props) => <Confirmation {...props} />} />\n\t\t\t\t\t<PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n\t\t\t\t\t<Route component={Error404} />\n\t\t\t\t</Switch>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<App />\n\t\t</Router>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"managerContainer\":\"dashboard_managerContainer___Iv84\",\"dailyCheckContainer\":\"dashboard_dailyCheckContainer__2znQm\",\"tip\":\"dashboard_tip__1h9x7\",\"membersContainer\":\"dashboard_membersContainer__erGbu\",\"selectButton\":\"dashboard_selectButton__1OQBH\",\"editContainer\":\"dashboard_editContainer__1jjOT\",\"selectItems\":\"dashboard_selectItems__3pfVx\",\"inputItem\":\"dashboard_inputItem__jdefe\",\"errors\":\"dashboard_errors__NiN0x\",\"sidebarContainer\":\"dashboard_sidebarContainer__1h7DO\",\"profileContainer\":\"dashboard_profileContainer__Kd3gt\",\"content\":\"dashboard_content__VsKxh\",\"comingSoon\":\"dashboard_comingSoon__1Z-q4\",\"blackBg\":\"dashboard_blackBg__zSBLX\"};"],"sourceRoot":""}